<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="kr.or.ddit.**.security" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
	</context:component-scan>
	
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>	
	
	<!-- http : security web 보안 설정 
	
		 스프링 컨테이너가 springSecurityFilterChain 이라는 이름으로 스프링 빈을 등록
		 intercept-url : pattern에 일치하는 url 요청에 대해 보안 처리	 
	
			기본 로그인 화면 url(스프링에서 화면 제공) : /login (spring security 버전마다 url이 상이) 
		 	
		 	/main url로 요청시 ROLE_ADMIN 권한을 획득한 사람만 접속 가능									 			 	 	
	-->
	
	<security:http auto-config="true" use-expressions="true" >
		<security:csrf disabled="true" />
		<security:intercept-url pattern="/login" access="permitAll" />
		<security:intercept-url pattern="/" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/main" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/notAllow" access="hasRole('ROLE_SUPER_ADMIN')" />
		<security:intercept-url pattern="/*" access="isAuthenticated()" />
		
		<security:form-login  login-page="/login" username-parameter="userid" password-parameter="pass"		
							  
					authentication-success-handler-ref="authenticationSuccessHandlerImpl" />
					
		<security:access-denied-handler error-page="/WEB-INF/views/error.jsp" />
		
		<security:logout delete-cookies="JSESSIONID" logout-success-url="/login" invalidate-session="true"/>					
	</security:http>
	
	
	<!-- authentication-manager : 인증 요청 처리
		 authentication-provider : 인증 정보를 레파지토리(인메모리, db, LDAP)로 부터 조회
		    					   설정된 UserDetailService(interface)를 사용
		 user-service : 인메모리 방식의 UserDetailService(interface) 설정 -->
	<security:authentication-manager >
		<security:authentication-provider user-service-ref="userService"/>
	</security:authentication-manager>

</beans>
